package stevebullimore.pclock

import Digit3x5._

case class Digit3x5(xPos: Double, yPos: Double, digit: Int, id:Int) extends AnimationEntity {
   override def draw(): List[(Int, Int)] = {
       digits(digit).map{case (x, y) => ((x + xPos).toInt, (y + yPos).toInt)}
   }
}

object Digit3x5 {
  val digits = Vector(
      List((0,0), (1,0), (2,0), (0,1), (0,2), (0,3), (0,4), (1,4), (2,4), (2,3), (2,2), (2,1)),
      List((1,0), (1,1), (1,2), (1,3), (1,4)),
      List((0,0), (1,0), (2,0), (2,1), (2,2), (1,2), (0,2), (0,3), (0,4), (1,4), (2,4)),
      List((0,0), (1,0), (2,0), (2,1), (2,2), (1,2), (2,3), (2,4), (1,4), (0,4)),
      List((0,0), (0,1), (0,2), (1,2), (2,2), (2,1), (2,0), (2,3), (2,4)),
      List((0,0), (1,0), (2,0), (0,1), (2,2), (1,2), (0,2), (2,3), (0,4), (1,4), (2,4)),
      List((0,0), (1,0), (2,0), (0,1), (2,2), (1,2), (0,2), (2,3), (0,4), (1,4), (2,4), (0, 3)),
      List((0,0), (1,0), (2,0), (2,1), (2,2), (2,3), (2,4)),
      List((0,0), (1,0), (2,0), (0,1), (0,2), (0,3), (0,4), (1,4), (2,4), (2,3), (2,2), (2,1), (1,2)),
      List((0,0), (1,0), (2,0), (0,1), (0,2), (0,4), (1,4), (2,4), (2,3), (2,2), (2,1), (1,2)))
}